<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="Comments">

	<!-- 
    deleteCommentsByboardId : board_id を指定して、その掲示板に関連するコメントを削除するクエリ。
    - 入力: board_id (Long型)
    - 戻り値: 削除された行数
	-->
	<delete id="deleteCommentsByboardId" parameterType="Long">
	    DELETE FROM comments WHERE board_id = #{id};
	</delete>
	
	<!-- 
	deleteById : コメントIDを指定して、該当するコメントを削除するクエリ。
	- 入力: id (Long型)
	- 戻り値: 削除された行数
	-->
	<delete id="deleteById" parameterType="Long">
	    DELETE FROM comments WHERE id = #{id};
	</delete>
	
	<resultMap id="CommentsResultMap" type="Comments">
	    <id property="id" column="id" />
	    <result property="content" column="content" />
	    <result property="created_at" column="created_at" />
	    
	    <!-- Users オブジェクトのマッピング -->
	    <association property="users" javaType="Users">
	        <id property="id" column="user_id" />
	        <result property="username" column="username" />
	        <result property="email" column="email" />
	    </association>
	</resultMap>
	
	<!-- 
    findAllComments : board_id を指定して、その掲示板に関連するすべてのコメントを取得するクエリ。
    - 入力: board_id, scale, pNum
    - 戻り値: コメントリスト (CommentsResultMapでマッピングされた結果)
	-->
	<select id="findAllComments" resultMap="CommentsResultMap" parameterType="map">
	    SELECT 
	        c.id AS id,
	        c.content AS content,
	        c.created_at AS created_at,
	        u.id AS user_id,
	        u.username AS username,
	        u.email AS email
	    FROM comments c
	    LEFT JOIN users u ON c.user_id = u.id
	    WHERE c.board_id = #{board_id}
	    ORDER BY c.created_at DESC
	    LIMIT #{scale} OFFSET #{pNum};
	</select>
	
	<!-- 
    deleteCommentsByUserId : ユーザーIDを指定して、そのユーザーが投稿したすべてのコメントを削除するクエリ。
    - 入力: user_id (Long型)
    - 戻り値: 削除された行数
	-->
	<select id="deleteCommentsByUserId" parameterType="Long">
	    DELETE FROM comments WHERE user_id = #{id};
	</select>

	
</mapper>



